
.handle-triangle {
  
  --offset-inline: var(--handle-offset, 0em);
  --offset-block: var(--handle-offset-block, 0em);
  --rotate: var(--handle-rotate, 0deg);
  
  --handle-shape: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23000' d='M12 2.25c-1.418 0-2.462.91-3.417 2.257c-.948 1.338-1.953 3.318-3.24 5.853l-.39.768c-1.065 2.098-1.904 3.75-2.344 5.076c-.448 1.348-.55 2.552.121 3.623c.67 1.066 1.801 1.511 3.22 1.719c1.398.204 3.272.204 5.656.204h.788c2.384 0 4.258 0 5.656-.204c1.419-.208 2.55-.653 3.22-1.72c.671-1.07.569-2.274.12-3.622c-.44-1.325-1.278-2.978-2.343-5.076l-.39 -.768c-1.287-2.535-2.292-4.515-3.24-5.853C14.462 3.159 13.418 2.25 12 2.25'/%3E%3C/svg%3E");

  &.rangeSlider {
    .rangeHandle {
      height: calc(1.6 * var(--handle-size, 1em));
      width: auto;
      aspect-ratio: 1/1;
      top: 50%;
      .rangeNub {
        mask-image: var(--handle-shape);
        mask-size: 100% 100%;
        mask-repeat: no-repeat;
        mask-position: center;
        border-radius: var(--radius);
        transition: transform 0.2s ease-in-out;
        transform: translateY(calc(1em + var(--offset-block))) rotate(var(--rotate)) !important;
      }
    }

    &.rsVertical .rangeHandle {
      left: 50%;
      top: auto;
      .rangeNub {
        transform: translateX(calc(1em + var(--offset-block))) rotate(calc(var(--rotate) - 90deg)) !important;
      }
    }

    &:not(.rsDisabled):not(.rsRange) .rangeHandle.rsActive .rangeNub,
    &.rsHoverable:not(.rsDisabled):not(.rsRange) .rangeHandle:hover .rangeNub {
      transform: translateY(calc(0.7em + var(--offset-block))) rotate(var(--rotate)) !important;
    }

    &.rsVertical:not(.rsDisabled):not(.rsRange) .rangeHandle.rsActive .rangeNub,
    &.rsVertical.rsHoverable:not(.rsDisabled):not(.rsRange) .rangeHandle:hover .rangeNub {
      transform: translateX(calc(0.7em + var(--offset-block))) rotate(calc(var(--rotate) - 90deg)) !important;
    }

    &.rsRange {
      .rangeHandle {
        height: calc(2 * var(--handle-size, 1em));
      }
    }

    /* left-arrow on range */
    &.rsRange .rangeHandle:nth-of-type(1) .rangeNub,
    &.rsRange.rsReversed .rangeHandle:nth-of-type(2) .rangeNub,
    &.rsRange.rsMax .rangeHandle:nth-of-type(1) .rangeNub,
    &.rsRange.rsMin.rsReversed .rangeHandle:nth-of-type(1) .rangeNub {
      transform: rotate(calc(90deg + var(--rotate))) translateY(var(--offset-inline)) translateX(var(--offset-block))!important;
    }

    /* right-arrow on range */
    &.rsRange .rangeHandle:nth-of-type(2) .rangeNub,
    &.rsRange.rsReversed .rangeHandle:nth-of-type(1) .rangeNub,
    &.rsRange.rsMin .rangeHandle:nth-of-type(1) .rangeNub,
    &.rsRange.rsMax.rsReversed .rangeHandle:nth-of-type(2) .rangeNub {
      transform: rotate(calc(-90deg - var(--rotate))) translateY(var(--offset-inline)) translateX(calc(var(--offset-block) * -1))!important;
    }

    /* left-arrow on range (vertical) */
    &.rsVertical.rsRange .rangeHandle:nth-of-type(1) .rangeNub,
    &.rsVertical.rsRange.rsReversed .rangeHandle:nth-of-type(2) .rangeNub,
    &.rsVertical.rsRange.rsMax .rangeHandle:nth-of-type(1) .rangeNub,
    &.rsVertical.rsRange.rsMin.rsReversed .rangeHandle:nth-of-type(1) .rangeNub {
      transform: rotate(calc(0deg - var(--rotate))) translateY(var(--offset-inline)) translateX(var(--offset-block))!important;
    }

    /* right-arrow on range (vertical) */
    &.rsVertical.rsRange .rangeHandle:nth-of-type(2) .rangeNub,
    &.rsVertical.rsRange.rsReversed .rangeHandle:nth-of-type(1) .rangeNub,
    &.rsVertical.rsRange.rsMin .rangeHandle:nth-of-type(1) .rangeNub,
    &.rsVertical.rsRange.rsMax.rsReversed .rangeHandle:nth-of-type(2) .rangeNub {
      transform: rotate(calc(180deg + var(--rotate))) translateY(var(--offset-inline)) translateX(calc(var(--offset-block) * -1))!important;
    }

    /* hover-effect bubble */
    &.rsHoverable:not(.rsDisabled) .rangeHandle::before {
      inset: 0;
      border-radius: 100px;
      background: var(--handle-border);
    }
    &.rsHoverable:not(.rsDisabled) .rangeHandle:hover::before {
      box-shadow: none;
    }
    &.rsHoverable:not(.rsDisabled) .rangeHandle.rsPress::before, 
    &.rsHoverable:not(.rsDisabled) .rangeHandle.rsPress:hover::before {
      box-shadow: 0 0 0 6px var(--handle-border);
    }
  }
}
